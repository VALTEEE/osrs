{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valtt\\\\Desktop\\\\web dev projects\\\\OSRS PROJECT\\\\osrs\\\\src\\\\pages\\\\challenges.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport OpenAI from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new OpenAI();\nexport default function Challenges() {\n  _s();\n  const [story, setStory] = useState(''); // to store API response\n  const [loading, setLoading] = useState(false);\n\n  // Function to call OpenAI API\n  async function handleStartGame() {\n    setLoading(true);\n    try {\n      const response = await client.chat.completions.create({\n        model: \"gpt-4o-mini\",\n        messages: [{\n          role: \"user\",\n          content: \"Write a short bedtime story about a unicorn.\"\n        }]\n      });\n      setStory(response.choices[0].message.content);\n    } catch (error) {\n      console.error(\"OpenAI API error:\", error);\n      setStory(\"Failed to fetch story. Try again.\");\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Challenges Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here are all the OSRS challenges.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartGame,\n      style: {\n        color: 'red',\n        backgroundColor: 'black',\n        width: '300px',\n        height: '75px',\n        position: 'fixed',\n        bottom: '100px',\n        left: '48%',\n        transform: 'translateX(-50%)'\n      },\n      children: loading ? 'Loading...' : 'Start The Challenge'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), story && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '150px',\n        whiteSpace: 'pre-wrap',\n        maxWidth: '600px',\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Story:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: story\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Challenges, \"s+FS50S/+Xf70KysJRhfRDu0geQ=\");\n_c = Challenges;\nvar _c;\n$RefreshReg$(_c, \"Challenges\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","client","Challenges","_s","story","setStory","loading","setLoading","handleStartGame","response","chat","completions","create","model","messages","role","content","choices","message","error","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","backgroundColor","width","height","position","bottom","left","transform","whiteSpace","maxWidth","margin","_c","$RefreshReg$"],"sources":["C:/Users/valtt/Desktop/web dev projects/OSRS PROJECT/osrs/src/pages/challenges.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport OpenAI from \"openai\";\r\n\r\nconst client = new OpenAI();\r\n\r\nexport default function Challenges() {\r\n  const [story, setStory] = useState(''); // to store API response\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Function to call OpenAI API\r\n  async function handleStartGame() {\r\n    setLoading(true);\r\n    try {\r\n      const response = await client.chat.completions.create({\r\n        model: \"gpt-4o-mini\",\r\n        messages: [\r\n          { role: \"user\", content: \"Write a short bedtime story about a unicorn.\" }\r\n        ],\r\n      });\r\n      setStory(response.choices[0].message.content);\r\n    } catch (error) {\r\n      console.error(\"OpenAI API error:\", error);\r\n      setStory(\"Failed to fetch story. Try again.\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n      <h1>Challenges Page</h1>\r\n      <p>Here are all the OSRS challenges.</p>\r\n\r\n      <button\r\n        onClick={handleStartGame}\r\n        style={{\r\n          color: 'red',\r\n          backgroundColor: 'black',\r\n          width: '300px',\r\n          height: '75px',\r\n          position: 'fixed',\r\n          bottom: '100px',\r\n          left: '48%',\r\n          transform: 'translateX(-50%)',\r\n        }}\r\n      >\r\n        {loading ? 'Loading...' : 'Start The Challenge'}\r\n      </button>\r\n\r\n      {story && (\r\n        <div style={{ marginTop: '150px', whiteSpace: 'pre-wrap', maxWidth: '600px', margin: 'auto' }}>\r\n          <h2>Generated Story:</h2>\r\n          <p>{story}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC,CAAC;AAE3B,eAAe,SAASI,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,eAAeW,eAAeA,CAAA,EAAG;IAC/BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMR,MAAM,CAACS,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;QACpDC,KAAK,EAAE,aAAa;QACpBC,QAAQ,EAAE,CACR;UAAEC,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAE;QAA+C,CAAC;MAE7E,CAAC,CAAC;MACFX,QAAQ,CAACI,QAAQ,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACF,OAAO,CAAC;IAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCd,QAAQ,CAAC,mCAAmC,CAAC;IAC/C;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,oBACEP,OAAA;IAAKqB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDxB,OAAA;MAAAwB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5B,OAAA;MAAAwB,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAExC5B,OAAA;MACE6B,OAAO,EAAErB,eAAgB;MACzBa,KAAK,EAAE;QACLS,KAAK,EAAE,KAAK;QACZC,eAAe,EAAE,OAAO;QACxBC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,OAAO;QACfC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE;MACb,CAAE;MAAAb,QAAA,EAEDlB,OAAO,GAAG,YAAY,GAAG;IAAqB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAERxB,KAAK,iBACJJ,OAAA;MAAKqB,KAAK,EAAE;QAAEE,SAAS,EAAE,OAAO;QAAEe,UAAU,EAAE,UAAU;QAAEC,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAhB,QAAA,gBAC5FxB,OAAA;QAAAwB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB5B,OAAA;QAAAwB,QAAA,EAAIpB;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CAnDuBD,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}